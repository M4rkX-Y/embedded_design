// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 18.1.0 Build 625 09/12/2018 SJ Lite Edition"

// DATE "09/27/2023 16:50:14"

// 
// Device: Altera 5CSEMA5F31C6 Package FBGA896
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module display7_en (
	a,
	EN,
	SW,
	b,
	c,
	d,
	e,
	f,
	g);
output 	a;
input 	EN;
input 	[3:0] SW;
output 	b;
output 	c;
output 	d;
output 	e;
output 	f;
output 	g;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \a~output_o ;
wire \b~output_o ;
wire \c~output_o ;
wire \d~output_o ;
wire \e~output_o ;
wire \f~output_o ;
wire \g~output_o ;
wire \EN~input_o ;
wire \SW[0]~input_o ;
wire \SW[1]~input_o ;
wire \SW[3]~input_o ;
wire \SW[2]~input_o ;
wire \inst4~0_combout ;
wire \inst2~0_combout ;
wire \inst3~0_combout ;
wire \inst4~combout ;
wire \inst5~0_combout ;
wire \inst6~0_combout ;
wire \inst7~0_combout ;


cyclonev_io_obuf \a~output (
	.i(!\inst4~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\a~output_o ),
	.obar());
// synopsys translate_off
defparam \a~output .bus_hold = "false";
defparam \a~output .open_drain_output = "false";
defparam \a~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \b~output (
	.i(!\inst2~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\b~output_o ),
	.obar());
// synopsys translate_off
defparam \b~output .bus_hold = "false";
defparam \b~output .open_drain_output = "false";
defparam \b~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \c~output (
	.i(!\inst3~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\c~output_o ),
	.obar());
// synopsys translate_off
defparam \c~output .bus_hold = "false";
defparam \c~output .open_drain_output = "false";
defparam \c~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \d~output (
	.i(!\inst4~combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\d~output_o ),
	.obar());
// synopsys translate_off
defparam \d~output .bus_hold = "false";
defparam \d~output .open_drain_output = "false";
defparam \d~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \e~output (
	.i(!\inst5~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\e~output_o ),
	.obar());
// synopsys translate_off
defparam \e~output .bus_hold = "false";
defparam \e~output .open_drain_output = "false";
defparam \e~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \f~output (
	.i(!\inst6~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\f~output_o ),
	.obar());
// synopsys translate_off
defparam \f~output .bus_hold = "false";
defparam \f~output .open_drain_output = "false";
defparam \f~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \g~output (
	.i(!\inst7~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\g~output_o ),
	.obar());
// synopsys translate_off
defparam \g~output .bus_hold = "false";
defparam \g~output .open_drain_output = "false";
defparam \g~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \EN~input (
	.i(EN),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\EN~input_o ));
// synopsys translate_off
defparam \EN~input .bus_hold = "false";
defparam \EN~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \SW[0]~input (
	.i(SW[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\SW[0]~input_o ));
// synopsys translate_off
defparam \SW[0]~input .bus_hold = "false";
defparam \SW[0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \SW[1]~input (
	.i(SW[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\SW[1]~input_o ));
// synopsys translate_off
defparam \SW[1]~input .bus_hold = "false";
defparam \SW[1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \SW[3]~input (
	.i(SW[3]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\SW[3]~input_o ));
// synopsys translate_off
defparam \SW[3]~input .bus_hold = "false";
defparam \SW[3]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \SW[2]~input (
	.i(SW[2]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\SW[2]~input_o ));
// synopsys translate_off
defparam \SW[2]~input .bus_hold = "false";
defparam \SW[2]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \inst4~0 (
// Equation(s):
// \inst4~0_combout  = ( \SW[2]~input_o  & ( (\EN~input_o  & ((\SW[1]~input_o ) # (\SW[0]~input_o ))) ) ) # ( !\SW[2]~input_o  & ( (\EN~input_o  & ((!\SW[0]~input_o ) # ((\SW[3]~input_o ) # (\SW[1]~input_o )))) ) )

	.dataa(!\EN~input_o ),
	.datab(!\SW[0]~input_o ),
	.datac(!\SW[1]~input_o ),
	.datad(!\SW[3]~input_o ),
	.datae(!\SW[2]~input_o ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst4~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst4~0 .extended_lut = "off";
defparam \inst4~0 .lut_mask = 64'h4555151545551515;
defparam \inst4~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst2~0 (
// Equation(s):
// \inst2~0_combout  = (\EN~input_o  & ((!\SW[2]~input_o ) # (!\SW[0]~input_o  $ (\SW[1]~input_o ))))

	.dataa(!\EN~input_o ),
	.datab(!\SW[0]~input_o ),
	.datac(!\SW[1]~input_o ),
	.datad(!\SW[2]~input_o ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst2~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst2~0 .extended_lut = "off";
defparam \inst2~0 .lut_mask = 64'h5541554155415541;
defparam \inst2~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst3~0 (
// Equation(s):
// \inst3~0_combout  = (\EN~input_o  & (((!\SW[1]~input_o ) # (\SW[2]~input_o )) # (\SW[0]~input_o )))

	.dataa(!\EN~input_o ),
	.datab(!\SW[0]~input_o ),
	.datac(!\SW[1]~input_o ),
	.datad(!\SW[2]~input_o ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst3~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst3~0 .extended_lut = "off";
defparam \inst3~0 .lut_mask = 64'h5155515551555155;
defparam \inst3~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb inst4(
// Equation(s):
// \inst4~combout  = ( \SW[2]~input_o  & ( (\EN~input_o  & (!\SW[0]~input_o  $ (!\SW[1]~input_o ))) ) ) # ( !\SW[2]~input_o  & ( (\EN~input_o  & ((!\SW[0]~input_o ) # ((\SW[3]~input_o ) # (\SW[1]~input_o )))) ) )

	.dataa(!\EN~input_o ),
	.datab(!\SW[0]~input_o ),
	.datac(!\SW[1]~input_o ),
	.datad(!\SW[3]~input_o ),
	.datae(!\SW[2]~input_o ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst4~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam inst4.extended_lut = "off";
defparam inst4.lut_mask = 64'h4555141445551414;
defparam inst4.shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst5~0 (
// Equation(s):
// \inst5~0_combout  = (\EN~input_o  & (!\SW[0]~input_o  & ((!\SW[2]~input_o ) # (\SW[1]~input_o ))))

	.dataa(!\EN~input_o ),
	.datab(!\SW[0]~input_o ),
	.datac(!\SW[1]~input_o ),
	.datad(!\SW[2]~input_o ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst5~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst5~0 .extended_lut = "off";
defparam \inst5~0 .lut_mask = 64'h4404440444044404;
defparam \inst5~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst6~0 (
// Equation(s):
// \inst6~0_combout  = ( \SW[2]~input_o  & ( (\EN~input_o  & ((!\SW[0]~input_o ) # (!\SW[1]~input_o ))) ) ) # ( !\SW[2]~input_o  & ( (\EN~input_o  & ((!\SW[0]~input_o  & ((!\SW[1]~input_o ) # (\SW[3]~input_o ))) # (\SW[0]~input_o  & (!\SW[1]~input_o  & 
// \SW[3]~input_o )))) ) )

	.dataa(!\EN~input_o ),
	.datab(!\SW[0]~input_o ),
	.datac(!\SW[1]~input_o ),
	.datad(!\SW[3]~input_o ),
	.datae(!\SW[2]~input_o ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst6~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst6~0 .extended_lut = "off";
defparam \inst6~0 .lut_mask = 64'h4054545440545454;
defparam \inst6~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst7~0 (
// Equation(s):
// \inst7~0_combout  = ( \SW[2]~input_o  & ( (\EN~input_o  & ((!\SW[0]~input_o ) # (!\SW[1]~input_o ))) ) ) # ( !\SW[2]~input_o  & ( (\EN~input_o  & ((\SW[3]~input_o ) # (\SW[1]~input_o ))) ) )

	.dataa(!\EN~input_o ),
	.datab(!\SW[0]~input_o ),
	.datac(!\SW[1]~input_o ),
	.datad(!\SW[3]~input_o ),
	.datae(!\SW[2]~input_o ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst7~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst7~0 .extended_lut = "off";
defparam \inst7~0 .lut_mask = 64'h0555545405555454;
defparam \inst7~0 .shared_arith = "off";
// synopsys translate_on

assign a = \a~output_o ;

assign b = \b~output_o ;

assign c = \c~output_o ;

assign d = \d~output_o ;

assign e = \e~output_o ;

assign f = \f~output_o ;

assign g = \g~output_o ;

endmodule
