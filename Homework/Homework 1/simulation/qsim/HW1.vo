// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 18.1.0 Build 625 09/12/2018 SJ Lite Edition"

// DATE "09/21/2023 20:06:13"

// 
// Device: Altera 5CGXFC7C7F23C8 Package FBGA484
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module HW1 (
	OUT,
	IN);
output 	[4:0] OUT;
input 	[2:0] IN;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \OUT[4]~output_o ;
wire \OUT[3]~output_o ;
wire \OUT[2]~output_o ;
wire \OUT[1]~output_o ;
wire \OUT[0]~output_o ;
wire \IN[2]~input_o ;
wire \IN[1]~input_o ;
wire \inst49~combout ;
wire \IN[0]~input_o ;
wire \inst44~combout ;
wire \inst37~0_combout ;
wire \inst34~0_combout ;
wire \inst28~0_combout ;


cyclonev_io_obuf \OUT[4]~output (
	.i(\inst49~combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\OUT[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \OUT[4]~output .bus_hold = "false";
defparam \OUT[4]~output .open_drain_output = "false";
defparam \OUT[4]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \OUT[3]~output (
	.i(\inst44~combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\OUT[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \OUT[3]~output .bus_hold = "false";
defparam \OUT[3]~output .open_drain_output = "false";
defparam \OUT[3]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \OUT[2]~output (
	.i(\inst37~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\OUT[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \OUT[2]~output .bus_hold = "false";
defparam \OUT[2]~output .open_drain_output = "false";
defparam \OUT[2]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \OUT[1]~output (
	.i(\inst34~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\OUT[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \OUT[1]~output .bus_hold = "false";
defparam \OUT[1]~output .open_drain_output = "false";
defparam \OUT[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \OUT[0]~output (
	.i(\inst28~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\OUT[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \OUT[0]~output .bus_hold = "false";
defparam \OUT[0]~output .open_drain_output = "false";
defparam \OUT[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \IN[2]~input (
	.i(IN[2]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\IN[2]~input_o ));
// synopsys translate_off
defparam \IN[2]~input .bus_hold = "false";
defparam \IN[2]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \IN[1]~input (
	.i(IN[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\IN[1]~input_o ));
// synopsys translate_off
defparam \IN[1]~input .bus_hold = "false";
defparam \IN[1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb inst49(
// Equation(s):
// \inst49~combout  = (\IN[2]~input_o  & \IN[1]~input_o )

	.dataa(!\IN[2]~input_o ),
	.datab(!\IN[1]~input_o ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst49~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam inst49.extended_lut = "off";
defparam inst49.lut_mask = 64'h1111111111111111;
defparam inst49.shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \IN[0]~input (
	.i(IN[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\IN[0]~input_o ));
// synopsys translate_off
defparam \IN[0]~input .bus_hold = "false";
defparam \IN[0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb inst44(
// Equation(s):
// \inst44~combout  = (!\IN[2]~input_o  & (\IN[1]~input_o  & \IN[0]~input_o )) # (\IN[2]~input_o  & (!\IN[1]~input_o ))

	.dataa(!\IN[2]~input_o ),
	.datab(!\IN[1]~input_o ),
	.datac(!\IN[0]~input_o ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst44~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam inst44.extended_lut = "off";
defparam inst44.lut_mask = 64'h4646464646464646;
defparam inst44.shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst37~0 (
// Equation(s):
// \inst37~0_combout  = !\IN[2]~input_o  $ (((!\IN[1]~input_o ) # (\IN[0]~input_o )))

	.dataa(!\IN[2]~input_o ),
	.datab(!\IN[1]~input_o ),
	.datac(!\IN[0]~input_o ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst37~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst37~0 .extended_lut = "off";
defparam \inst37~0 .lut_mask = 64'h6565656565656565;
defparam \inst37~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst34~0 (
// Equation(s):
// \inst34~0_combout  = !\IN[1]~input_o  $ (!\IN[0]~input_o )

	.dataa(!\IN[1]~input_o ),
	.datab(!\IN[0]~input_o ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst34~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst34~0 .extended_lut = "off";
defparam \inst34~0 .lut_mask = 64'h6666666666666666;
defparam \inst34~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst28~0 (
// Equation(s):
// \inst28~0_combout  = !\IN[0]~input_o  $ (((!\IN[1]~input_o ) # (\IN[2]~input_o )))

	.dataa(!\IN[2]~input_o ),
	.datab(!\IN[1]~input_o ),
	.datac(!\IN[0]~input_o ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst28~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst28~0 .extended_lut = "off";
defparam \inst28~0 .lut_mask = 64'h2D2D2D2D2D2D2D2D;
defparam \inst28~0 .shared_arith = "off";
// synopsys translate_on

assign OUT[4] = \OUT[4]~output_o ;

assign OUT[3] = \OUT[3]~output_o ;

assign OUT[2] = \OUT[2]~output_o ;

assign OUT[1] = \OUT[1]~output_o ;

assign OUT[0] = \OUT[0]~output_o ;

endmodule
