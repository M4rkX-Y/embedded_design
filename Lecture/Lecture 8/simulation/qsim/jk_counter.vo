// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 18.1.0 Build 625 09/12/2018 SJ Lite Edition"

// DATE "10/04/2023 09:04:03"

// 
// Device: Altera 5CGXFC7C7F23C8 Package FBGA484
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module jk_counter (
	counter,
	dir,
	clock);
output 	[3:0] counter;
input 	dir;
input 	clock;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \counter[3]~output_o ;
wire \counter[2]~output_o ;
wire \counter[1]~output_o ;
wire \counter[0]~output_o ;
wire \clock~input_o ;
wire \inst~0_combout ;
wire \inst~q ;
wire \dir~input_o ;
wire \inst9~combout ;
wire \inst1~0_combout ;
wire \inst1~q ;
wire \inst10~combout ;
wire \inst2~0_combout ;
wire \inst2~q ;
wire \inst11~combout ;
wire \inst4~0_combout ;
wire \inst4~q ;


cyclonev_io_obuf \counter[3]~output (
	.i(\inst4~q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\counter[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \counter[3]~output .bus_hold = "false";
defparam \counter[3]~output .open_drain_output = "false";
defparam \counter[3]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \counter[2]~output (
	.i(\inst2~q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\counter[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \counter[2]~output .bus_hold = "false";
defparam \counter[2]~output .open_drain_output = "false";
defparam \counter[2]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \counter[1]~output (
	.i(\inst1~q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\counter[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \counter[1]~output .bus_hold = "false";
defparam \counter[1]~output .open_drain_output = "false";
defparam \counter[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \counter[0]~output (
	.i(\inst~q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\counter[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \counter[0]~output .bus_hold = "false";
defparam \counter[0]~output .open_drain_output = "false";
defparam \counter[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \clock~input (
	.i(clock),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\clock~input_o ));
// synopsys translate_off
defparam \clock~input .bus_hold = "false";
defparam \clock~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \inst~0 (
// Equation(s):
// \inst~0_combout  = !\inst~q 

	.dataa(!\inst~q ),
	.datab(gnd),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst~0 .extended_lut = "off";
defparam \inst~0 .lut_mask = 64'hAAAAAAAAAAAAAAAA;
defparam \inst~0 .shared_arith = "off";
// synopsys translate_on

dffeas inst(
	.clk(\clock~input_o ),
	.d(\inst~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst~q ),
	.prn(vcc));
// synopsys translate_off
defparam inst.is_wysiwyg = "true";
defparam inst.power_up = "low";
// synopsys translate_on

cyclonev_io_ibuf \dir~input (
	.i(dir),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\dir~input_o ));
// synopsys translate_off
defparam \dir~input .bus_hold = "false";
defparam \dir~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb inst9(
// Equation(s):
// \inst9~combout  = LCELL(!\inst~q  $ (!\dir~input_o ))

	.dataa(!\inst~q ),
	.datab(!\dir~input_o ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst9~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam inst9.extended_lut = "off";
defparam inst9.lut_mask = 64'h6666666666666666;
defparam inst9.shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst1~0 (
// Equation(s):
// \inst1~0_combout  = !\inst1~q 

	.dataa(!\inst1~q ),
	.datab(gnd),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst1~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst1~0 .extended_lut = "off";
defparam \inst1~0 .lut_mask = 64'hAAAAAAAAAAAAAAAA;
defparam \inst1~0 .shared_arith = "off";
// synopsys translate_on

dffeas inst1(
	.clk(\inst9~combout ),
	.d(\inst1~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst1~q ),
	.prn(vcc));
// synopsys translate_off
defparam inst1.is_wysiwyg = "true";
defparam inst1.power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb inst10(
// Equation(s):
// \inst10~combout  = LCELL(!\inst1~q  $ (!\dir~input_o ))

	.dataa(!\inst1~q ),
	.datab(!\dir~input_o ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst10~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam inst10.extended_lut = "off";
defparam inst10.lut_mask = 64'h6666666666666666;
defparam inst10.shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst2~0 (
// Equation(s):
// \inst2~0_combout  = !\inst2~q 

	.dataa(!\inst2~q ),
	.datab(gnd),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst2~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst2~0 .extended_lut = "off";
defparam \inst2~0 .lut_mask = 64'hAAAAAAAAAAAAAAAA;
defparam \inst2~0 .shared_arith = "off";
// synopsys translate_on

dffeas inst2(
	.clk(\inst10~combout ),
	.d(\inst2~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst2~q ),
	.prn(vcc));
// synopsys translate_off
defparam inst2.is_wysiwyg = "true";
defparam inst2.power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb inst11(
// Equation(s):
// \inst11~combout  = LCELL(!\inst2~q  $ (!\dir~input_o ))

	.dataa(!\inst2~q ),
	.datab(!\dir~input_o ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst11~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam inst11.extended_lut = "off";
defparam inst11.lut_mask = 64'h6666666666666666;
defparam inst11.shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst4~0 (
// Equation(s):
// \inst4~0_combout  = !\inst4~q 

	.dataa(!\inst4~q ),
	.datab(gnd),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst4~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst4~0 .extended_lut = "off";
defparam \inst4~0 .lut_mask = 64'hAAAAAAAAAAAAAAAA;
defparam \inst4~0 .shared_arith = "off";
// synopsys translate_on

dffeas inst4(
	.clk(\inst11~combout ),
	.d(\inst4~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst4~q ),
	.prn(vcc));
// synopsys translate_off
defparam inst4.is_wysiwyg = "true";
defparam inst4.power_up = "low";
// synopsys translate_on

assign counter[3] = \counter[3]~output_o ;

assign counter[2] = \counter[2]~output_o ;

assign counter[1] = \counter[1]~output_o ;

assign counter[0] = \counter[0]~output_o ;

endmodule
